version 6

# Set these appropriately for your system
lan="br-lan"
wan="ppp+"

# Remove this when you are confident that the lan and wan variables
# are set correctly
interface any removeme
        policy return
	server ping accept
	server ssh accept

# Port forwarding example. If you have multiple external IPs, filter
# them by adding at the end, e.g.:  dst $external_ip
# ipv4 dnat to $internal_ip:80 proto tcp dport 80
# ipv4 dnat to $internal_ip:443 proto tcp dport 443

# This is required for IPv6 to work correctly
ipv6 interface any ipv6inter proto icmpv6
        policy return
        client ipv6neigh accept
        server ipv6neigh accept
        client ipv6router accept
        server ipv6router accept
        client ipv6mld accept
        server ipv6mld accept

interface "$wan" world
	protection strong
	policy deny

	client all accept
	server ping accept

        client dhcpv6 accept

interface "$lan" local
	policy reject

	client all accept
	server ping accept
	server dns accept
	server "http https" accept
	server dhcp accept
        server dhcpv6 accept
	server ssh accept

router outgoing inface "$lan" outface "$wan" src4 not "${UNROUTABLE_IPV4}" src6 not "${UNROUTABLE_IPV6}"
	# Hide internal IPs
	ipv4 masquerade
	route all accept

router incoming inface "$wan" outface "$lan" src4 not "${UNROUTABLE_IPV4}" src6 not "${UNROUTABLE_IPV6}"
	# e.g....
	# server "http https" accept dst "$internal_ip"

# Explicitly allow any bridged data, otherwise WiFi <-> LAN can get blocked
# depending on kernel settings
router lan2lan inface "$lan" outface "$lan"
 	policy accept
